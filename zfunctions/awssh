tla=$(echo $1 | cut -d'-' -f1)
region_list=("us-east-1" "us-east-2" "us-west-1" "us-west-2" "eu-west-1" "eu-west-2")
if grep "^\[profile $tla\]$" ~/.aws/config > /dev/null; then
  profile=$tla
else
  case $tla in
    # amica|aviva|avms|avst|ba|dfk|edf|fmi|fsnc|ggp|jel|jhn|jl|jlr|mmo|q2|sma|uyuni|welkr|wh|ws ) profile='ms' ;;
    ccp*|etwiki*|tkts*|tpx*|wiki*|backup* ) profile='comcast' ;;
    usva* )                                 profile='estee' ;;
    sbx*|lab*|gl-*)                         profile='sbx' ;;
    *)                                      profile="ms" ;;
  esac;
fi
function awscli {
  # set -x
  if [[ "$profile" == "comcast" ]]; then
    aws --profile comcast "$@"
  else
    aws-vault exec $profile -- aws $@
  fi
}

if awscli sts get-caller-identity &> /dev/null; then
  for region in "${region_list[@]}"; do
    echo -n "."
    # instanceIds=($()
    IFS=$'\n' instanceIds=($(awscli ec2 describe-instances --filter Name=tag:Name,Values="$1*" Name=instance-state-name,Values=running --query "Reservations[].Instances[].[Tags[?Key=='Name'] | [0].Value,InstanceId]" --output text --region $region))
    if [[ -n $instanceIds ]]; then
      echo
      if [[ $(wc -l <<< "${instanceIds}" | xargs) == 1 ]]; then
        awscli ssm start-session --target $(cut -f2 <<< "${instanceIds}") --region $region
        break 2
      else
        COLUMNS=1
        PS3="Select an instance > "
        select option in ${instanceIds[@]}; do
          instanceId=$(cut -f2 <<< "${option}")
          awscli ssm start-session --target $instanceId --region $region
          break 3
        done
      fi
    fi
  done
else
  echo "Unable to authenticate to AWS. Exiting..."
fi
